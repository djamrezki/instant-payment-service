spring:
  application:
    name: instant-payment-service
  lifecycle:
    timeout-per-shutdown-phase: 30s

  task:
    scheduling:
      pool:
        size: 1

  modulith:
    events:
      republish-outstanding-events-on-restart: false
      completion-mode: DELETE

  threads:
    virtual:
      enabled: true   # Enable virtual threads (Java 21+)

  datasource:
    url: jdbc:postgresql://localhost:5432/instantpay
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: update   # For dev only; use "validate" in prod
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    open-in-view: false

  sql:
    init:
      mode: always
      platform: postgres

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

    producer:
      client-id: instant-payment-service
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
      acks: all
      enable-idempotence: true
      retries: 10
      properties:
        request.timeout.ms: 10000
        delivery.timeout.ms: 30000
        max.in.flight.requests.per.connection: 1

logging:
  level:
    root: INFO
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
    org.hibernate.SQL: DEBUG

server:
  port: 8080
  shutdown: graceful

app:
  kafka:
    topics:
      payments: payments.events

management:
  endpoint:
    health:
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
